DataFrame.resample(rule, how=None, axis=0, fill_method=None, closed=None, label=None, convention='start', kind=None, loffset=None, limit=None, base=0)
*参数*
1.rule:string 表示目标转换的偏移字符串或对象('3T'/'10AS')
2.how : string 方法进行向下采样或重新采样，默认为下采样的“mean”##已不使用
3.axis : int, optional, default 0
4.fill_method :string, default None 向上采样
5.closed : {‘right’, ‘left’} 容器间隔的哪一侧是关闭的
6.label : {‘right’, ‘left’}
7.convention : {‘start’, ‘end’, ‘s’, ‘e’}
8.kind : “period”/”timestamp”
9.loffset : timedelta 调整重新采样的时间标签
10.limit : int, default None 
11.base : int, default 0 

--------------------------------------------------
******************df.resample()*******************
--------------------------------------------------

eg:
-> index = pd.date_range('1/1/2000', periods=9, freq='T')
   ###DatetimeIndex(['2000-01-01 00:00:00', '2000-01-01 00:01:00',
               	  '2000-01-01 00:02:00', '2000-01-01 00:03:00',
                  '2000-01-01 00:04:00', '2000-01-01 00:05:00',
                  '2000-01-01 00:06:00', '2000-01-01 00:07:00',
                  '2000-01-01 00:08:00'],
                  dtype='datetime64[ns]', freq='T')
-> series = pd.Series(range(9), index=index)
   ###2000-01-01 00:00:00    0
      2000-01-01 00:01:00    1
      2000-01-01 00:02:00    2
      2000-01-01 00:03:00    3
      2000-01-01 00:04:00    4
      2000-01-01 00:05:00    5
      2000-01-01 00:06:00    6
      2000-01-01 00:07:00    7
      2000-01-01 00:08:00    8
      Freq: T, dtype: int64
-> series.resample('3T').sum() #将时间以三分钟聚合，三分钟加一次，默认默认使用左标签（label=’left’），左闭合（closed=’left’）
   ###  2000-01-01 00:00:00     3
	2000-01-01 00:03:00    12
	2000-01-01 00:06:00    21
	Freq: 3T, dtype: int64   #注意是0，3，6
-> series.resample('3T', label='right').sum() #设置label为right
   ###  2000-01-01 00:03:00     3
	2000-01-01 00:06:00    12
	2000-01-01 00:09:00    21
	Freq: 3T, dtype: int64   #注意是3，6，9
-> series.resample('30S').asfreq() #asfreq()进行频度转换。
   ###  2000-01-01 00:00:00    0.0
	2000-01-01 00:00:30    NaN
	2000-01-01 00:01:00    1.0
	2000-01-01 00:01:30    NaN
	2000-01-01 00:02:00    2.0
	2000-01-01 00:02:30    NaN
	2000-01-01 00:03:00    3.0
	2000-01-01 00:03:30    NaN
	2000-01-01 00:04:00    4.0
	2000-01-01 00:04:30    NaN
	2000-01-01 00:05:00    5.0
	2000-01-01 00:05:30    NaN
	2000-01-01 00:06:00    6.0
	2000-01-01 00:06:30    NaN
	2000-01-01 00:07:00    7.0
	2000-01-01 00:07:30    NaN
	2000-01-01 00:08:00    8.0
	Freq: 30S, dtype: float64  #每30s，和原来的series比较，没有时间的值为np.nan
-> series.resample('30S').pad() #将缺失值进行填充/ffill（）/bill（）-有差别
   ###  2000-01-01 00:00:00    0
	2000-01-01 00:00:30    0
	2000-01-01 00:01:00    1
	2000-01-01 00:01:30    1
	2000-01-01 00:02:00    2
	2000-01-01 00:02:30    2
	2000-01-01 00:03:00    3
	2000-01-01 00:03:30    3
	2000-01-01 00:04:00    4
	2000-01-01 00:04:30    4
	2000-01-01 00:05:00    5
	2000-01-01 00:05:30    5
	2000-01-01 00:06:00    6
	2000-01-01 00:06:30    6
	2000-01-01 00:07:00    7
	2000-01-01 00:07:30    7
	2000-01-01 00:08:00    8
	Freq: 30S, dtype: int64
